---
name: publish

on:
  push:
    tags:
      - v*

jobs:
  pypi:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.6
      - name: Setup Poetry
        uses: gr1n/setup-poetry@v4
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: poetry install
      - name: Publish
        run: make publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

  registry:
    runs-on: ubuntu-20.04
    steps:
      - name: Get tag
        uses: jungwinter/split@v1
        id: tag
        with:
          msg: ${{ github.ref }}
          seperator: /
      - name: Get version
        uses: jungwinter/split@v1
        id: version
        with:
          msg: ${{ steps.tag.outputs._2 }}
          seperator: v
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.version.outputs._1 }}
